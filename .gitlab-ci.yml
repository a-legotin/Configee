stages:
    - build-net
    - build-app
    - build-images
    - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

cache:
  paths:
    - src/web/node_modules/

services:
  - docker:20.10.16-dind

build-net:
  stage: build-net
  image: mcr.microsoft.com/dotnet/sdk:7.0
  tags:
    - docker
  script:
    - export PATH="$PATH:/root/.dotnet/tools"
    - dotnet restore src/backend/Configee.sln
    - dotnet build src/backend/Configee.sln -c Release

build-app:
  stage: build-app
  tags:
    - docker
  image: node:16-alpine3.11
  script:
    - node -v
    - npm -v
    - cd src/web
    - npm install -g svgo
    - npm --force install -g yarn
    - yarn --non-interactive
    - yarn build --non-interactive

build-images:
  stage: build-images
  tags:
    - docker
  image: docker:stable
  before_script:
    - apk add --no-cache docker-compose
    - docker info
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker-compose build
    - docker tag configee-web:latest $CI_REGISTRY_IMAGE/configee-web:latest
    - docker push $CI_REGISTRY_IMAGE/configee-web:latest

deploy:
  stage: deploy
  image: 
     name: bitnami/kubectl:latest
     entrypoint: [""]  
  tags:
    - docker
  environment:
    name: staging
  script:
        - kubectl config get-contexts
        - kubectl config use-context ezlab/kubernetes-agent:galaxy
        - kubectl apply -f deploy/namespace.yaml
        - kubectl delete secret docker-registry registry-credentials --ignore-not-found --namespace=configee
        - kubectl create secret docker-registry registry-credentials --docker-server=$CI_REGISTRY --docker-username=$EZLAB_DEPLOY_USER --docker-password=$EZLAB_DEPLOY_PWD --namespace=configee
        - kubectl apply -f deploy
        - kubectl rollout restart deployment configee-web-deployment --namespace configee